/**
 * An object based off of PostExpressServer which is used for beta features that
 * anyone is able to use by running PostExpressServer.enableBeta();
 */

import PostExpressServer from "./Server";
import { Response } from "express";
import { render } from "../../renderer";
import RenderParameters from "../interfaces/RenderParameters";
import { readFileSync } from "fs";

class PostExpressBetaServer {
    constructor(
        private readonly Server: PostExpressServer
    ) {}

    /**
     * Renders a page to the user using server-side rendering.
     * @param res The response object generated by Express.js
     * @param htmlRaw The raw HTML code
     * @param renderParams Options for setting the value of certain elements
     * @param stylesheets External stylesheets that will be loaded into the page that is rendered
     */
    public Render(res: Response, htmlRaw: string, renderParams?: RenderParameters[], stylesheets?: string[]) {
        render(this.Server, res, htmlRaw, renderParams, stylesheets);
    }

    /**
     * Returns the contents of a file.
     * @param filePath 
     * @param root
     */
    public GetRaw(filePath: string, root?: string) {
        let contents = readFileSync(root + filePath);
        return contents.toString();
    }
}

export default PostExpressBetaServer;